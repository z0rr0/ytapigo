{"name":"Ytapigo","tagline":"ytapigo, api, translate, yandex","body":"YtapiGo\r\n=======\r\n\r\nIt is a program to translate and check spelling using the console, it based on [Yandex Translate API](http://api.yandex.ru/translate/). By default **en-ru** direction and UTF-8 encoding are used.\r\n\r\nIt's a clone of the project [Ytapi](http://z0rr0.github.io/ytapi/) but on the [Go programming language](http://golang.org/). This is created as a package/library, but it can be used as a separate program (see the example #5 below).\r\n\r\n### Usage\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n    \"github.com/z0rr0/ytapigo\"\r\n    \"os\"\r\n)\r\n\r\nfunc main() {\r\n    var (\r\n        spelling, translation string\r\n        err error\r\n    )\r\n\r\n    // Example #1: en-ru direction (default)\r\n    spelling, translation, err = ytapigo.GetTr(\"Hi All!\")\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n    // Example #2: en-ru direction\r\n    spelling, translation, err = ytapigo.GetTr(\"en\", \"Hi All!\")\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n    // Example #3: ru-en direction\r\n    spelling, translation, err = ytapigo.GetTr(\"en\", \"Привет Всем!\")\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n    // Example #4: translation article for a word\r\n    spelling, translation, err = ytapigo.GetTr(\"car\")\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n    // Example #5: read command line parameters\r\n    spelling, translation, err = ytapigo.GetTr(os.Args[1:])\r\n    if err != nil {\r\n        panic(err)\r\n    }\r\n    fmt.Println(spelling)\r\n    fmt.Println(translation)\r\n}\r\n```\r\n\r\nDownload binary file:\r\n\r\n* [Linux x86_64](https://yadi.sk/d/GMRRkcMidjTDK)\r\n* [RaspberryPI](https://yadi.sk/d/5Aq5XwcJdjRud)\r\n\r\n### Dependencies\r\n\r\n* [Go](http://golang.org/) is an open source programming language that makes it easy to build simple, reliable, and efficient software.\r\n* [Viper](https://github.com/spf13/viper) is a complete configuration solution for go applications.\r\n\r\n### API keys\r\n\r\nYou should get API KEYs before an using this program, them values have to wroten to a file **$HOME/.ytapigo.json** (see the example `ytapigo_example.json`):\r\n\r\n```javascript\r\n{\r\n  \"APItr\": \"some key value\",\r\n  \"APIdict\": \"some key value\"\r\n}\r\n```\r\n\r\n1. **APItr** - API KEY for [Yandex Translate](http://api.yandex.ru/key/form.xml?service=trnsl)\r\n2. **APIdict** - API KEY for [Yandex Dictionary](http://api.yandex.ru/key/form.xml?service=dict)\r\n\r\nIt was implemented using the services:\r\n\r\n* [Yandex Dictionary](http://api.yandex.ru/dictionary/)\r\n* [Yandex Translate](http://api.yandex.ru/translate/)\r\n* [Yandex Speller](http://api.yandex.ru/speller/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}